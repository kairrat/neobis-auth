[{"/Users/sabrina_/Desktop/authorization/auth/src/index.js":"1","/Users/sabrina_/Desktop/authorization/auth/src/App.js":"2","/Users/sabrina_/Desktop/authorization/auth/src/components/navbar.jsx":"3","/Users/sabrina_/Desktop/authorization/auth/src/components/register.jsx":"4","/Users/sabrina_/Desktop/authorization/auth/src/components/login.jsx":"5","/Users/sabrina_/Desktop/authorization/auth/src/store.js":"6","/Users/sabrina_/Desktop/authorization/auth/src/reducers/index.js":"7","/Users/sabrina_/Desktop/authorization/auth/src/reducers/message.js":"8","/Users/sabrina_/Desktop/authorization/auth/src/reducers/auth.js":"9","/Users/sabrina_/Desktop/authorization/auth/src/actions/ auth.js":"10","/Users/sabrina_/Desktop/authorization/auth/src/services/auth.service.js":"11","/Users/sabrina_/Desktop/authorization/auth/src/actions/ types.js":"12","/Users/sabrina_/Desktop/authorization/auth/src/actions/message.js":"13","/Users/sabrina_/Desktop/authorization/auth/src/components/Profile.jsx":"14","/Users/sabrina_/Desktop/authorization/auth/src/components/ Home.js":"15","/Users/sabrina_/Desktop/authorization/auth/src/services/ auth-header.js":"16"},{"size":443,"mtime":1671136051003,"results":"17","hashOfConfig":"18"},{"size":2718,"mtime":1671148426081,"results":"19","hashOfConfig":"18"},{"size":583,"mtime":1670972703486,"results":"20","hashOfConfig":"18"},{"size":5190,"mtime":1671222076144,"results":"21","hashOfConfig":"18"},{"size":3312,"mtime":1671149017641,"results":"22","hashOfConfig":"18"},{"size":340,"mtime":1671220897658,"results":"23","hashOfConfig":"18"},{"size":157,"mtime":1671133948842,"results":"24","hashOfConfig":"18"},{"size":354,"mtime":1671134767463,"results":"25","hashOfConfig":"18"},{"size":1042,"mtime":1671134780530,"results":"26","hashOfConfig":"18"},{"size":1805,"mtime":1671146587144,"results":"27","hashOfConfig":"18"},{"size":864,"mtime":1671325768124,"results":"28","hashOfConfig":"18"},{"size":304,"mtime":1671133649127,"results":"29","hashOfConfig":"18"},{"size":207,"mtime":1671134658830,"results":"30","hashOfConfig":"18"},{"size":988,"mtime":1671222297390,"results":"31","hashOfConfig":"18"},{"size":578,"mtime":1671325680582,"results":"32","hashOfConfig":"18"},{"size":238,"mtime":1671027656121,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1ot0xuo",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sabrina_/Desktop/authorization/auth/src/index.js",[],[],[],"/Users/sabrina_/Desktop/authorization/auth/src/App.js",["87"],[],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Link, useLocation } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport Home from \"./components/ Home\";\nimport Profile from \"./components/Profile\";\n\n\nimport { logout } from \"./actions/ auth\";\nimport { clearMessage } from \"./actions/message\";\n\nconst App = () => {\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  let location = useLocation();\n\n  useEffect(() => {\n    if ([\"/login\", \"/register\"].includes(location.pathname)) {\n      dispatch(clearMessage()); // clear message when changing location\n    }\n  }, [dispatch, location]);\n\n  const logOut = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n     \n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n\n       \n\n          {currentUser && (\n            <li className=\"nav-item\">\n              <Link to={\"/user\"} className=\"nav-link\">\n                User\n              </Link>\n            </li>\n          )}\n        </div>\n\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/profile\"} className=\"nav-link\">\n                {currentUser.username}\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                LogOut\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Login\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                Sign Up\n              </Link>\n            </li>\n          </div>\n        )}\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          \n        </Routes>\n      </div>\n\n    </div>\n  );\n};\n\nexport default App;\n","/Users/sabrina_/Desktop/authorization/auth/src/components/navbar.jsx",["88"],[],"/Users/sabrina_/Desktop/authorization/auth/src/components/register.jsx",["89"],[],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { register } from \"../actions/ auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\nconst vage = (value) => {\n    if (value.length < 0 || value.length > 40) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          The password must be between 6 and 40 characters.\n        </div>\n      );\n    }\n  };\nconst Register = () => {\n    const navigate = useNavigate();\n\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n\n  const [successful, setSuccessful] = useState(false);\n\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n  const onChangeAGe = (e) => {\n    const age = e.target.value;\n    setAge(age);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(register(username, email, password,age))\n        .then(() => {\n              \n          setSuccessful(true);\n\n        })\n        .catch(() => {\n          setSuccessful(false);\n        });\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"age\">age</label>\n                <Input\n                  type=\"number\"\n                  className=\"form-control\"\n                  name=\"age\"\n                  value={age}\n                  onChange={onChangeAGe}\n                  validations={[required, vage]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button  className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n\n","/Users/sabrina_/Desktop/authorization/auth/src/components/login.jsx",[],[],"/Users/sabrina_/Desktop/authorization/auth/src/store.js",[],[],"/Users/sabrina_/Desktop/authorization/auth/src/reducers/index.js",[],[],"/Users/sabrina_/Desktop/authorization/auth/src/reducers/message.js",["90"],[],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/ types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}","/Users/sabrina_/Desktop/authorization/auth/src/reducers/auth.js",["91"],[],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from \"../actions/ types\";\n  \n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  \n  const initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n  \n  export default function (state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case REGISTER_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case REGISTER_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: payload.user,\n        };\n      case LOGIN_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      case LOGOUT:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      default:\n        return state;\n    }\n  }","/Users/sabrina_/Desktop/authorization/auth/src/actions/ auth.js",[],[],"/Users/sabrina_/Desktop/authorization/auth/src/services/auth.service.js",["92"],[],"/Users/sabrina_/Desktop/authorization/auth/src/actions/ types.js",[],[],"/Users/sabrina_/Desktop/authorization/auth/src/actions/message.js",[],[],"/Users/sabrina_/Desktop/authorization/auth/src/components/Profile.jsx",[],[],"/Users/sabrina_/Desktop/authorization/auth/src/components/ Home.js",["93","94","95","96","97","98","99"],[],"/Users/sabrina_/Desktop/authorization/auth/src/services/ auth-header.js",[],[],{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"104","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":16},{"ruleId":"100","severity":1,"message":"105","line":60,"column":11,"nodeType":"102","messageId":"103","endLine":60,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":5,"column":1,"nodeType":"108","endLine":18,"endColumn":2},{"ruleId":"106","severity":1,"message":"107","line":15,"column":3,"nodeType":"108","endLine":50,"endColumn":4},{"ruleId":"106","severity":1,"message":"109","line":41,"column":1,"nodeType":"108","endLine":45,"endColumn":3},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"110","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"111","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":17},{"ruleId":"100","severity":1,"message":"112","line":2,"column":19,"nodeType":"102","messageId":"103","endLine":2,"endColumn":25},{"ruleId":"100","severity":1,"message":"113","line":2,"column":27,"nodeType":"102","messageId":"103","endLine":2,"endColumn":32},{"ruleId":"100","severity":1,"message":"114","line":2,"column":40,"nodeType":"102","messageId":"103","endLine":2,"endColumn":51},{"ruleId":"100","severity":1,"message":"115","line":8,"column":11,"nodeType":"102","messageId":"103","endLine":8,"endColumn":21},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'register' is defined but never used.","'navigate' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","'useEffect' is defined but never used.","'Navigate' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'useLocation' is defined but never used.","'ToRegister' is assigned a value but never used."]